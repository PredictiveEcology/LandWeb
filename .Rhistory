outputObjects = moduleSpecificOutputObjects)
devtools::load_all("~/GitHub/SpaDES/.")
library(igraph)
library(SpaDES)
moduleDir <- file.path("C:/Eliot/SpaDES/modules")
inputDir <- file.path(moduleDir, "inputs") %>% checkPath(create = TRUE)
outputDir <- file.path(moduleDir, "outputs")
cacheDir <- file.path(outputDir, "cache")
times <- list(start = 0, end = 10)
parameters <- list(
#.progress = list(type = "text", interval = 1), # for a progress bar
## If there are further modules, each can have its own set of parameters:
#module1 = list(param1 = value1, param2 = value2),
#module2 = list(param1 = value1, param2 = value2)
)
modules <- list("importLandWeb_BAP_Layers")
objects <- list()
paths <- list(
cachePath = cacheDir,
modulePath = moduleDir,
inputPath = inputDir,
outputPath = outputDir
)
mySim <- simInit(times = times, params = parameters, modules = modules,
objects = objects, paths = paths)
devtools::load_all("~/GitHub/SpaDES/.")
library(igraph)
library(SpaDES)
moduleDir <- file.path("C:/Eliot/SpaDES/modules")
inputDir <- file.path(moduleDir, "inputs") %>% checkPath(create = TRUE)
outputDir <- file.path(moduleDir, "outputs")
cacheDir <- file.path(outputDir, "cache")
times <- list(start = 0, end = 10)
parameters <- list(
#.progress = list(type = "text", interval = 1), # for a progress bar
## If there are further modules, each can have its own set of parameters:
#module1 = list(param1 = value1, param2 = value2),
#module2 = list(param1 = value1, param2 = value2)
)
modules <- list("importLandWeb_BAP_Layers")
objects <- list()
paths <- list(
cachePath = cacheDir,
modulePath = moduleDir,
inputPath = inputDir,
outputPath = outputDir
)
mySim <- simInit(times = times, params = parameters, modules = modules,
objects = objects, paths = paths)
sys.calls()
devtools::load_all("~/GitHub/SpaDES/.")
library(igraph)
library(SpaDES)
moduleDir <- file.path("C:/Eliot/SpaDES/modules")
inputDir <- file.path(moduleDir, "inputs") %>% checkPath(create = TRUE)
outputDir <- file.path(moduleDir, "outputs")
cacheDir <- file.path(outputDir, "cache")
times <- list(start = 0, end = 10)
parameters <- list(
#.progress = list(type = "text", interval = 1), # for a progress bar
## If there are further modules, each can have its own set of parameters:
#module1 = list(param1 = value1, param2 = value2),
#module2 = list(param1 = value1, param2 = value2)
)
modules <- list("importLandWeb_BAP_Layers")
objects <- list()
paths <- list(
cachePath = cacheDir,
modulePath = moduleDir,
inputPath = inputDir,
outputPath = outputDir
)
mySim <- simInit(times = times, params = parameters, modules = modules,
objects = objects, paths = paths, notOlderThan = Sys.time())
devtools::load_all("~/GitHub/SpaDES/.")
library(igraph)
library(SpaDES)
moduleDir <- file.path("C:/Eliot/SpaDES/modules")
inputDir <- file.path(moduleDir, "inputs") %>% checkPath(create = TRUE)
outputDir <- file.path(moduleDir, "outputs")
cacheDir <- file.path(outputDir, "cache")
times <- list(start = 0, end = 10)
parameters <- list(
#.progress = list(type = "text", interval = 1), # for a progress bar
## If there are further modules, each can have its own set of parameters:
#module1 = list(param1 = value1, param2 = value2),
#module2 = list(param1 = value1, param2 = value2)
)
modules <- list("importLandWeb_BAP_Layers")
objects <- list()
paths <- list(
cachePath = cacheDir,
modulePath = moduleDir,
inputPath = inputDir,
outputPath = outputDir
)
mySim <- simInit(times = times, params = parameters, modules = modules,
objects = objects, paths = paths, notOlderThan = Sys.time())
devtools::load_all("~/GitHub/SpaDES/.")
library(igraph)
library(SpaDES)
moduleDir <- file.path("C:/Eliot/SpaDES/modules")
inputDir <- file.path(moduleDir, "inputs") %>% checkPath(create = TRUE)
outputDir <- file.path(moduleDir, "outputs")
cacheDir <- file.path(outputDir, "cache")
times <- list(start = 0, end = 10)
parameters <- list(
#.progress = list(type = "text", interval = 1), # for a progress bar
## If there are further modules, each can have its own set of parameters:
#module1 = list(param1 = value1, param2 = value2),
#module2 = list(param1 = value1, param2 = value2)
)
modules <- list("importLandWeb_BAP_Layers")
objects <- list()
paths <- list(
cachePath = cacheDir,
modulePath = moduleDir,
inputPath = inputDir,
outputPath = outputDir
)
mySim <- simInit(times = times, params = parameters, modules = modules,
objects = objects, paths = paths, notOlderThan = Sys.time())
devtools::load_all("~/GitHub/SpaDES/.")
library(igraph)
library(SpaDES)
moduleDir <- file.path("C:/Eliot/SpaDES/modules")
inputDir <- file.path(moduleDir, "inputs") %>% checkPath(create = TRUE)
outputDir <- file.path(moduleDir, "outputs")
cacheDir <- file.path(outputDir, "cache")
times <- list(start = 0, end = 10)
parameters <- list(
#.progress = list(type = "text", interval = 1), # for a progress bar
## If there are further modules, each can have its own set of parameters:
#module1 = list(param1 = value1, param2 = value2),
#module2 = list(param1 = value1, param2 = value2)
)
modules <- list("importLandWeb_BAP_Layers")
objects <- list()
paths <- list(
cachePath = cacheDir,
modulePath = moduleDir,
inputPath = inputDir,
outputPath = outputDir
)
mySim <- simInit(times = times, params = parameters, modules = modules,
objects = objects, paths = paths, notOlderThan = Sys.time())
devtools::load_all("~/GitHub/SpaDES/.")
library(igraph)
library(SpaDES)
moduleDir <- file.path("C:/Eliot/SpaDES/modules")
inputDir <- file.path(moduleDir, "inputs") %>% checkPath(create = TRUE)
outputDir <- file.path(moduleDir, "outputs")
cacheDir <- file.path(outputDir, "cache")
times <- list(start = 0, end = 10)
parameters <- list(
#.progress = list(type = "text", interval = 1), # for a progress bar
## If there are further modules, each can have its own set of parameters:
#module1 = list(param1 = value1, param2 = value2),
#module2 = list(param1 = value1, param2 = value2)
)
modules <- list("importLandWeb_BAP_Layers")
objects <- list()
paths <- list(
cachePath = cacheDir,
modulePath = moduleDir,
inputPath = inputDir,
outputPath = outputDir
)
mySim <- simInit(times = times, params = parameters, modules = modules,
objects = objects, paths = paths, notOlderThan = Sys.time())
wh
tmpl[wh]@paths$cachePath
tmpl[wh]@paths$cachePath
tmpl[wh]
tmpl[wh]
is(tmpl[wh])
tmpl
is(tmpl[wh])
is(tmpl[[wh]])
tmpl[wh]
tmpl
length(tmpl)
tmpl[[wh]]
tmpl[[wh]]
tmpl[[wh]]@paths$cachePath
tmpl[[wh]]@paths$cachePath
tmpl[wh][[1]]@paths$cachePath
devtools::load_all("~/GitHub/SpaDES/.")
library(igraph)
library(SpaDES)
moduleDir <- file.path("C:/Eliot/SpaDES/modules")
inputDir <- file.path(moduleDir, "inputs") %>% checkPath(create = TRUE)
outputDir <- file.path(moduleDir, "outputs")
cacheDir <- file.path(outputDir, "cache")
times <- list(start = 0, end = 10)
parameters <- list(
#.progress = list(type = "text", interval = 1), # for a progress bar
## If there are further modules, each can have its own set of parameters:
#module1 = list(param1 = value1, param2 = value2),
#module2 = list(param1 = value1, param2 = value2)
)
modules <- list("importLandWeb_BAP_Layers")
objects <- list()
paths <- list(
cachePath = cacheDir,
modulePath = moduleDir,
inputPath = inputDir,
outputPath = outputDir
)
mySim <- simInit(times = times, params = parameters, modules = modules,
objects = objects, paths = paths, notOlderThan = Sys.time())
moduleSpecificOutputObjects
notOlderThan
moduleSpecificObjects
sim@.envir$.inputObjects
sim
moduleSpecificObjects
library(igraph)
library(SpaDES)
moduleDir <- file.path("C:/Eliot/SpaDES/modules")
inputDir <- file.path(moduleDir, "inputs") %>% checkPath(create = TRUE)
outputDir <- file.path(moduleDir, "outputs")
cacheDir <- file.path(outputDir, "cache")
times <- list(start = 0, end = 10)
parameters <- list(
#.progress = list(type = "text", interval = 1), # for a progress bar
## If there are further modules, each can have its own set of parameters:
#module1 = list(param1 = value1, param2 = value2),
#module2 = list(param1 = value1, param2 = value2)
)
modules <- list("importLandWeb_BAP_Layers")
objects <- list()
paths <- list(
cachePath = cacheDir,
modulePath = moduleDir,
inputPath = inputDir,
outputPath = outputDir
)
mySim <- simInit(times = times, params = parameters, modules = modules,
objects = objects, paths = paths, notOlderThan = Sys.time())
devtools::load_all("~/GitHub/SpaDES/.")
library(igraph)
library(SpaDES)
moduleDir <- file.path("C:/Eliot/SpaDES/modules")
inputDir <- file.path(moduleDir, "inputs") %>% checkPath(create = TRUE)
outputDir <- file.path(moduleDir, "outputs")
cacheDir <- file.path(outputDir, "cache")
times <- list(start = 0, end = 10)
parameters <- list(
#.progress = list(type = "text", interval = 1), # for a progress bar
## If there are further modules, each can have its own set of parameters:
#module1 = list(param1 = value1, param2 = value2),
#module2 = list(param1 = value1, param2 = value2)
)
modules <- list("importLandWeb_BAP_Layers")
objects <- list()
paths <- list(
cachePath = cacheDir,
modulePath = moduleDir,
inputPath = inputDir,
outputPath = outputDir
)
mySim <- simInit(times = times, params = parameters, modules = modules,
objects = objects, paths = paths)
ls()
rm(list = ls())
gc()
gc()
library(igraph)
library(SpaDES)
moduleDir <- file.path("C:/Eliot/SpaDES/modules")
inputDir <- file.path(moduleDir, "inputs") %>% checkPath(create = TRUE)
outputDir <- file.path(moduleDir, "outputs") %>% checkPath(create = TRUE)
cacheDir <- file.path(outputDir, "cache") %>% checkPath(create = TRUE)
times <- list(start = 0, end = 10)
parameters <- list(
#.progress = list(type = "text", interval = 1), # for a progress bar
## If there are further modules, each can have its own set of parameters:
#module1 = list(param1 = value1, param2 = value2),
#module2 = list(param1 = value1, param2 = value2)
)
modules <- list("importLandWeb_BAP_Layers")
objects <- list()
paths <- list(
cachePath = cacheDir,
modulePath = moduleDir,
inputPath = inputDir,
outputPath = outputDir
)
mySim <- simInit(times = times, params = parameters, modules = modules,
objects = objects, paths = paths)
spades(mySim)
library(igraph)
library(SpaDES)
moduleDir <- file.path("C:/Eliot/SpaDES/modules")
inputDir <- file.path(moduleDir, "inputs") %>% checkPath(create = TRUE)
outputDir <- file.path(moduleDir, "outputs") %>% checkPath(create = TRUE)
cacheDir <- file.path(outputDir, "cache") %>% checkPath(create = TRUE)
times <- list(start = 0, end = 10)
parameters <- list(
#.progress = list(type = "text", interval = 1), # for a progress bar
## If there are further modules, each can have its own set of parameters:
#module1 = list(param1 = value1, param2 = value2),
#module2 = list(param1 = value1, param2 = value2)
)
modules <- list("importLandWeb_BAP_Layers")
objects <- list()
paths <- list(
cachePath = cacheDir,
modulePath = moduleDir,
inputPath = inputDir,
outputPath = outputDir
)
mySim <- simInit(times = times, params = parameters, modules = modules,
objects = objects, paths = paths)
spades(mySim)
library(igraph)
library(SpaDES)
moduleDir <- file.path("C:/Eliot/SpaDES/modules")
inputDir <- file.path(moduleDir, "inputs") %>% checkPath(create = TRUE)
outputDir <- file.path(moduleDir, "outputs") %>% checkPath(create = TRUE)
cacheDir <- file.path(outputDir, "cache") %>% checkPath(create = TRUE)
times <- list(start = 0, end = 10)
parameters <- list(
#.progress = list(type = "text", interval = 1), # for a progress bar
## If there are further modules, each can have its own set of parameters:
#module1 = list(param1 = value1, param2 = value2),
#module2 = list(param1 = value1, param2 = value2)
)
modules <- list("importLandWeb_BAP_Layers")
objects <- list()
paths <- list(
cachePath = cacheDir,
modulePath = moduleDir,
inputPath = inputDir,
outputPath = outputDir
)
mySim <- simInit(times = times, params = parameters, modules = modules,
objects = objects, paths = paths)
devtools::load_all("~/GitHub/SpaDES/.")
library(igraph)
library(SpaDES)
moduleDir <- file.path("C:/Eliot/SpaDES/modules")
inputDir <- file.path(moduleDir, "inputs") %>% checkPath(create = TRUE)
outputDir <- file.path(moduleDir, "outputs")
cacheDir <- file.path(outputDir, "cache")
times <- list(start = 0, end = 10)
parameters <- list(
#.progress = list(type = "text", interval = 1), # for a progress bar
## If there are further modules, each can have its own set of parameters:
#module1 = list(param1 = value1, param2 = value2),
#module2 = list(param1 = value1, param2 = value2)
)
modules <- list("importLandWeb_BAP_Layers")
objects <- list()
paths <- list(
cachePath = cacheDir,
modulePath = moduleDir,
inputPath = inputDir,
outputPath = outputDir
)
mySim <- simInit(times = times, params = parameters, modules = modules,
objects = objects, paths = paths, notOlderThan = Sys.time())
isInRepo
sim@.envir
ls(sim@.envir)
library(igraph)
library(SpaDES)
moduleDir <- file.path("C:/Eliot/SpaDES/modules")
inputDir <- file.path(moduleDir, "inputs") %>% checkPath(create = TRUE)
outputDir <- file.path(moduleDir, "outputs")
cacheDir <- file.path(outputDir, "cache")
times <- list(start = 0, end = 10)
parameters <- list(
#.progress = list(type = "text", interval = 1), # for a progress bar
## If there are further modules, each can have its own set of parameters:
#module1 = list(param1 = value1, param2 = value2),
#module2 = list(param1 = value1, param2 = value2)
)
modules <- list("importLandWeb_BAP_Layers")
objects <- list()
paths <- list(
cachePath = cacheDir,
modulePath = moduleDir,
inputPath = inputDir,
outputPath = outputDir
)
mySim <- simInit(times = times, params = parameters, modules = modules,
objects = objects, paths = paths, notOlderThan = Sys.time())
devtools::load_all("~/GitHub/SpaDES/.")
library(igraph)
library(SpaDES)
moduleDir <- file.path("C:/Eliot/SpaDES/modules")
inputDir <- file.path(moduleDir, "inputs") %>% checkPath(create = TRUE)
outputDir <- file.path(moduleDir, "outputs") %>% checkPath(create = TRUE)
cacheDir <- file.path(outputDir, "cache") %>% checkPath(create = TRUE)
times <- list(start = 0, end = 10)
parameters <- list(
#.progress = list(type = "text", interval = 1), # for a progress bar
## If there are further modules, each can have its own set of parameters:
#module1 = list(param1 = value1, param2 = value2),
#module2 = list(param1 = value1, param2 = value2)
)
modules <- list("importLandWeb_BAP_Layers")
objects <- list()
paths <- list(
cachePath = cacheDir,
modulePath = moduleDir,
inputPath = inputDir,
outputPath = outputDir
)
mySim <- simInit(times = times, params = parameters, modules = modules,
objects = objects, paths = paths)
devtools::load_all("~/GitHub/SpaDES/.")
devtools::load_all("~/GitHub/SpaDES/.")
library(igraph)
library(SpaDES)
moduleDir <- file.path("C:/Eliot/SpaDES/modules")
inputDir <- file.path(moduleDir, "inputs") %>% checkPath(create = TRUE)
outputDir <- file.path(moduleDir, "outputs") %>% checkPath(create = TRUE)
cacheDir <- file.path(outputDir, "cache") %>% checkPath(create = TRUE)
times <- list(start = 0, end = 10)
parameters <- list(
#.progress = list(type = "text", interval = 1), # for a progress bar
## If there are further modules, each can have its own set of parameters:
#module1 = list(param1 = value1, param2 = value2),
#module2 = list(param1 = value1, param2 = value2)
)
modules <- list("importLandWeb_BAP_Layers")
objects <- list()
paths <- list(
cachePath = cacheDir,
modulePath = moduleDir,
inputPath = inputDir,
outputPath = outputDir
)
mySim <- simInit(times = times, params = parameters, modules = modules,
objects = objects, paths = paths)
library(igraph)
library(SpaDES)
moduleDir <- file.path("C:/Eliot/SpaDES/modules")
inputDir <- file.path(moduleDir, "inputs") %>% checkPath(create = TRUE)
outputDir <- file.path(moduleDir, "outputs") %>% checkPath(create = TRUE)
cacheDir <- file.path(outputDir, "cache") %>% checkPath(create = TRUE)
times <- list(start = 0, end = 10)
parameters <- list(
#.progress = list(type = "text", interval = 1), # for a progress bar
## If there are further modules, each can have its own set of parameters:
importLandWeb_BAP_Layers = list(.useCache = FALSE),
#module2 = list(param1 = value1, param2 = value2)
)
modules <- list("importLandWeb_BAP_Layers")
objects <- list()
paths <- list(
cachePath = cacheDir,
modulePath = moduleDir,
inputPath = inputDir,
outputPath = outputDir
)
mySim <- simInit(times = times, params = parameters, modules = modules,
objects = objects, paths = paths)
library(igraph)
library(SpaDES)
moduleDir <- file.path("C:/Eliot/SpaDES/modules")
inputDir <- file.path(moduleDir, "inputs") %>% checkPath(create = TRUE)
outputDir <- file.path(moduleDir, "outputs") %>% checkPath(create = TRUE)
cacheDir <- file.path(outputDir, "cache") %>% checkPath(create = TRUE)
times <- list(start = 0, end = 10)
parameters <- list(
#.progress = list(type = "text", interval = 1), # for a progress bar
## If there are further modules, each can have its own set of parameters:
importLandWeb_BAP_Layers = list(.useCache = FALSE)
#module2 = list(param1 = value1, param2 = value2)
)
modules <- list("importLandWeb_BAP_Layers")
objects <- list()
paths <- list(
cachePath = cacheDir,
modulePath = moduleDir,
inputPath = inputDir,
outputPath = outputDir
)
mySim <- simInit(times = times, params = parameters, modules = modules,
objects = objects, paths = paths)
devtools::load_all("~/GitHub/SpaDES/.")
library(igraph)
library(SpaDES)
moduleDir <- file.path("C:/Eliot/SpaDES/modules")
inputDir <- file.path(moduleDir, "inputs") %>% checkPath(create = TRUE)
outputDir <- file.path(moduleDir, "outputs") %>% checkPath(create = TRUE)
cacheDir <- file.path(outputDir, "cache") %>% checkPath(create = TRUE)
times <- list(start = 0, end = 10)
parameters <- list(
#.progress = list(type = "text", interval = 1), # for a progress bar
## If there are further modules, each can have its own set of parameters:
importLandWeb_BAP_Layers = list(.useCache = FALSE)
#module2 = list(param1 = value1, param2 = value2)
)
modules <- list("importLandWeb_BAP_Layers")
objects <- list()
paths <- list(
cachePath = cacheDir,
modulePath = moduleDir,
inputPath = inputDir,
outputPath = outputDir
)
mySim <- simInit(times = times, params = parameters, modules = modules,
objects = objects, paths = paths)
sim@.envir$.inputObjects
sim
ls(sim)
sim@params[[m]][[".useCache"]]
